---
- name: Clone elastalert repository
  git:
    repo: https://github.com/Yelp/elastalert.git
    accept_hostkey: yes
    dest: /opt/elastalert
    version: "{{ elastalert_version }}"

- name: Install virtualenv
  pip:
    name: virtualenv

- name: Avoid errors that result from InsecurePlatformWarning
  apt:
    name: "{{ item }}"
  with_items:
    - python-dev
    - libffi-dev
    - libssl-dev
  tags:
    - apt

- name: Install six 1.9.0
  pip:
    name: six==1.9.0
    virtualenv: /opt/elastalert/venv

- name: Install elastalert dependencies
  pip:
    requirements: /opt/elastalert/requirements.txt
    virtualenv: /opt/elastalert/venv

- name: Install elastalert
  command: /opt/elastalert/venv/bin/python setup.py install
  args:
    chdir: /opt/elastalert

- name: Flush handlers to ensure a local elasticsearch has been started
  meta: flush_handlers

- name: Install httplib2
  pip:
    name: httplib2

# - name: Check existence of elastalert metadata index
#   uri:
#     url: "http://{{ elastalert_elasticsearch_host }}:{{ elastalert_elasticsearch_port }}/{{ elastalert_index }}"
#     method: HEAD
#     status_code:
#       - 200
#       - 404
#   register: elastalert_index_check
#
# - name: Create elasticsearch index for elastalert metadata
#   command: /opt/elastalert/venv/bin/elastalert-create-index --host "{{ elastalert_elasticsearch_host }}" --port "{{ elastalert_elasticsearch_port }}" --no-auth --no-ssl --url-prefix "" --index "{{ elastalert_index }}" --old-index ""
#   args:
#     chdir: /opt/elastalert
#   when: elastalert_index_check.status == 404
#   notify:
#     - restart elastalert


- name: Create rules directory
  file:
    path: /etc/elastalert/rules
    state: directory
    owner: root
    group: root
    mode: 0755
  notify:
    - restart elastalert

- name: Process rules
  template:
    src: "{{ item }}.j2"
    dest: "/etc/elastalert/rules/{{ item }}"
  with_items:
    - test.yaml

- name: Process config template
  template:
    src: templates/config.yaml.j2
    dest: /etc/elastalert/config.yaml

# - name: add elastalert init script
#   template:
#     src: elastalert.init
#     dest: /etc/init.d/elastalert
#     mode: 0755

- name: Install systemd unit file
  template:
    src: templates/elastalert/elastalert-systemd.service.j2
    dest: /lib/systemd/system/elastalert.service
    owner: root
    group: root
  notify: reload systemd
  tags:
    - systemd

- name: Enable elastalert at startup
  service:
    name: elastalert
    state: started
    enabled: yes

#
# Giving me issues, unnecessary for clean installs
# - name: Check existence of elastalert metadata index
#   uri:
#     url: "http://{{ elastalert_elasticsearch_host }}:{{ elastalert_elasticsearch_port }}/{{ elastalert_index }}"
#     method: HEAD
#     status_code:
#       - 200
#       - 404
#   register: elastalert_index_check

# - name: Create elasticsearch index for elastalert metadata
#   command: /opt/elastalert/venv/bin/elastalert-create-index --host "{{ elastalert_elasticsearch_host }}" --port "{{ elastalert_elasticsearch_port }}" --no-auth --no-ssl --url-prefix "" --index "{{ elastalert_index }}" --old-index ""
#   args:
#     chdir: /opt/elastalert
#   when: elastalert_index_check.status == 404
#   notify:
#     - restart elastalert

# - name: Add elastalert group
#   group:
#     name: elastalert
#     state: present
#
# - name: Add elastalert user
#   user:
#     name: elastalert
#     group: elastalert
#     system: yes
#     state: present

# - name: Create virtualenv directory
#   file:
#     path: "/opt/elastalert"
#     owner: "{{ elastalert_user }}"
#     group: "{{ elastalert_group }}"
#     state: directory
#
# - name: Clone elastalert repository
#   git:
#     repo: https://github.com/Yelp/elastalert.git
#     accept_hostkey: yes
#     dest: /opt/elastalert
#     version: "{{ elastalert_version }}"
#
# - name: Avoid errors that result from InsecurePlatformWarning
#   apt:
#     name: "{{ item }}"
#   with_items:
#     - software-properties-common
#     - python
#     - python-pip
#     - python-dev
#     - libffi-dev
#     - libssl-dev
#   tags:
#     - apt
#
# - name: Install virtualenv
#   pip:
#     name: virtualenv

# - name: Establish venv and ensure pip is at latest version
#   pip:
#     name: "{{ item }}"
#     state: latest
#     virtualenv: "/opt/elastalert/venv"
#   become: yes
#   become_user: "{{ elastalert_user }}"
#   with_items:
#     - pip
#     - setuptools

# - name: Install setuptools
#   pip:
#     name: "setuptools>=11.3"
#
# - name: Install six 1.9.0
#   pip:
#     name: six==1.9.0
#     virtualenv: /opt/elastalert/venv
#
# - name: Install elastalert dependencies
#   pip:
#     requirements: /opt/elastalert/requirements.txt
#     virtualenv: /opt/elastalert/venv
#
# - name: Install elastalert
#   command: /opt/elastalert/venv/bin/python setup.py install
#   args:
#     chdir: /opt/elastalert
#
# - name: Install elasticsearch-py
#   pip:
#     name: "elasticsearch>=6.3.0"
#
# - name: Ensure etc directory is created
#   file:
#     path: "/etc/elastalert"
#     state: directory
#
# - name: Create rules directory
#   file:
#     path: /etc/elastalert/rules
#     state: directory
#     owner: root
#     group: root
#     mode: 0755
#   # notify:
#   #   - restart elastalert
#
# - name: Install elastalert config
#   template:
#     src: templates/elastalert/config.yaml.j2
#     dest: "/etc/elastalert/config.yaml"
#
# - name: Copy rules
#   template:
#     src: "templates/elastalert/{{ item }}.yaml.j2"
#     dest: "/etc/elastalert/rules/{{ item }}.yaml"
#   with_items:
#     - test
#
# - name: Install systemd unit file
#   template:
#     src: templates/elastalert/elastalert-systemd.service.j2
#     dest: /lib/systemd/system/elastalert.service
#     owner: root
#     group: root
#   notify:
#     - restart elastalert
#
# - name: Enable elastalert at startup
#   service:
#     name: elastalert
#     state: started
#     enabled: yes



#
# - name: Install elastalert into virtualenv
#   pip:
#     name: elastalert
#     version: "{{ elastalert_version }}"
#     virtualenv: "/opt/elastalert/venv"
#   become_user: "{{ elastalert_user }}"
#   become: yes


#
#   tags: systemd
#   notify: restart elastalert

    # - name: Check for existing elastalert index
    #   uri:
    #     url: "{{ elastalert_es_url }}/elastalert"
    #     method: HEAD
    #     status_code: 200
    #   register: elastalert_index_result
    #   changed_when: false
    #   ignore_errors: yes
    #
    # - name: Create index
    #   command: "/opt/elastalert/venv/bin/elastalert-create-index --config /etc/elastalert/config.yaml --index {{ elastalert_es_writeback_index }} --old-index ''"
    #   when: elastalert_index_result|failed
    #   become_user: "{{ elastalert_user }}"
    #   become: yes


#
# - name: Copy over rules from templates
#   template:
#     src: "templates/elastalert/{{ item }}.yaml.j2"
#     dest: "/etc/elastalert/rules/{{ item }}.yaml"
#     owner: root
#     group: root
#     validate: "/opt/elastalert/venv/bin/elastalert-test-rule --config /etc/elastalert/config.yaml %s"
#   with_items:
#     - test
#   notify: restart elastalert
#   tags: systemd
#
# - name: Enable elastalert service
#   service:
#     name: elastalert
#     enabled: yes
